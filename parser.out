Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DOT
    KEYWORD
    LEFT_BRACKET
    RIGHT_BRACKET
    SYMBOL

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement
Rule 3     statement_list -> statement statement_list
Rule 4     statement -> expression SEMICOLON
Rule 5     statement -> function_definition
Rule 6     statement -> if_statement
Rule 7     statement -> code_block
Rule 8     statement -> COMMENT
Rule 9     function_definition -> FUNCTION_KEYWORD IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN code_block
Rule 10    argument_list -> IDENTIFIER
Rule 11    argument_list -> IDENTIFIER COMMA argument_list
Rule 12    argument_list -> empty
Rule 13    if_statement -> CONTROL_KEYWORD expression code_block
Rule 14    if_statement -> CONTROL_KEYWORD expression code_block else_statement
Rule 15    else_statement -> CONTROL_KEYWORD code_block
Rule 16    else_statement -> empty
Rule 17    empty -> <empty>
Rule 18    code_block -> LEFT_BRACE statement_list RIGHT_BRACE
Rule 19    expression -> IDENTIFIER
Rule 20    expression -> INTEGER
Rule 21    expression -> STRING
Rule 22    expression -> expression PLUS expression
Rule 23    expression -> expression MINUS expression
Rule 24    expression -> expression MULTIPLY expression
Rule 25    expression -> expression DIVIDE expression
Rule 26    expression -> expression EQUALS expression
Rule 27    expression -> expression NOT_EQUALS expression
Rule 28    expression -> expression LESS_THAN expression
Rule 29    expression -> expression GREATER_THAN expression
Rule 30    expression -> expression LESS_THAN_OR_EQUAL expression
Rule 31    expression -> expression GREATER_THAN_OR_EQUAL expression
Rule 32    expression -> expression AND expression
Rule 33    expression -> expression OR expression
Rule 34    expression -> NOT expression
Rule 35    expression -> IDENTIFIER ASSIGN expression
Rule 36    expression -> LEFT_PAREN expression RIGHT_PAREN

Terminals, with rules where they appear

AND                  : 32
ASSIGN               : 35
COMMA                : 11
COMMENT              : 8
CONTROL_KEYWORD      : 13 14 15
DIVIDE               : 25
DOT                  : 
EQUALS               : 26
FUNCTION_KEYWORD     : 9
GREATER_THAN         : 29
GREATER_THAN_OR_EQUAL : 31
IDENTIFIER           : 9 10 11 19 35
INTEGER              : 20
KEYWORD              : 
LEFT_BRACE           : 18
LEFT_BRACKET         : 
LEFT_PAREN           : 9 36
LESS_THAN            : 28
LESS_THAN_OR_EQUAL   : 30
MINUS                : 23
MULTIPLY             : 24
NOT                  : 34
NOT_EQUALS           : 27
OR                   : 33
PLUS                 : 22
RIGHT_BRACE          : 18
RIGHT_BRACKET        : 
RIGHT_PAREN          : 9 36
SEMICOLON            : 4
STRING               : 21
SYMBOL               : 
error                : 

Nonterminals, with rules where they appear

argument_list        : 9 11
code_block           : 7 9 13 14 15
else_statement       : 14
empty                : 12 16
expression           : 4 13 14 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 35 36
function_definition  : 5
if_statement         : 6
program              : 0
statement            : 2 3
statement_list       : 1 3 18

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement
    (3) statement_list -> . statement statement_list
    (4) statement -> . expression SEMICOLON
    (5) statement -> . function_definition
    (6) statement -> . if_statement
    (7) statement -> . code_block
    (8) statement -> . COMMENT
    (19) expression -> . IDENTIFIER
    (20) expression -> . INTEGER
    (21) expression -> . STRING
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression MULTIPLY expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression EQUALS expression
    (27) expression -> . expression NOT_EQUALS expression
    (28) expression -> . expression LESS_THAN expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression LESS_THAN_OR_EQUAL expression
    (31) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . NOT expression
    (35) expression -> . IDENTIFIER ASSIGN expression
    (36) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (9) function_definition -> . FUNCTION_KEYWORD IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN code_block
    (13) if_statement -> . CONTROL_KEYWORD expression code_block
    (14) if_statement -> . CONTROL_KEYWORD expression code_block else_statement
    (18) code_block -> . LEFT_BRACE statement_list RIGHT_BRACE

    COMMENT         shift and go to state 8
    IDENTIFIER      shift and go to state 9
    INTEGER         shift and go to state 10
    STRING          shift and go to state 11
    NOT             shift and go to state 12
    LEFT_PAREN      shift and go to state 13
    FUNCTION_KEYWORD shift and go to state 14
    CONTROL_KEYWORD shift and go to state 15
    LEFT_BRACE      shift and go to state 16

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    expression                     shift and go to state 4
    function_definition            shift and go to state 5
    if_statement                   shift and go to state 6
    code_block                     shift and go to state 7

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .

    $end            reduce using rule 1 (program -> statement_list .)


state 3

    (2) statement_list -> statement .
    (3) statement_list -> statement . statement_list
    (2) statement_list -> . statement
    (3) statement_list -> . statement statement_list
    (4) statement -> . expression SEMICOLON
    (5) statement -> . function_definition
    (6) statement -> . if_statement
    (7) statement -> . code_block
    (8) statement -> . COMMENT
    (19) expression -> . IDENTIFIER
    (20) expression -> . INTEGER
    (21) expression -> . STRING
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression MULTIPLY expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression EQUALS expression
    (27) expression -> . expression NOT_EQUALS expression
    (28) expression -> . expression LESS_THAN expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression LESS_THAN_OR_EQUAL expression
    (31) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . NOT expression
    (35) expression -> . IDENTIFIER ASSIGN expression
    (36) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (9) function_definition -> . FUNCTION_KEYWORD IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN code_block
    (13) if_statement -> . CONTROL_KEYWORD expression code_block
    (14) if_statement -> . CONTROL_KEYWORD expression code_block else_statement
    (18) code_block -> . LEFT_BRACE statement_list RIGHT_BRACE

    $end            reduce using rule 2 (statement_list -> statement .)
    RIGHT_BRACE     reduce using rule 2 (statement_list -> statement .)
    COMMENT         shift and go to state 8
    IDENTIFIER      shift and go to state 9
    INTEGER         shift and go to state 10
    STRING          shift and go to state 11
    NOT             shift and go to state 12
    LEFT_PAREN      shift and go to state 13
    FUNCTION_KEYWORD shift and go to state 14
    CONTROL_KEYWORD shift and go to state 15
    LEFT_BRACE      shift and go to state 16

    statement                      shift and go to state 3
    statement_list                 shift and go to state 17
    expression                     shift and go to state 4
    function_definition            shift and go to state 5
    if_statement                   shift and go to state 6
    code_block                     shift and go to state 7

state 4

    (4) statement -> expression . SEMICOLON
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . MULTIPLY expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . EQUALS expression
    (27) expression -> expression . NOT_EQUALS expression
    (28) expression -> expression . LESS_THAN expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . LESS_THAN_OR_EQUAL expression
    (31) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

    SEMICOLON       shift and go to state 18
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    MULTIPLY        shift and go to state 21
    DIVIDE          shift and go to state 22
    EQUALS          shift and go to state 23
    NOT_EQUALS      shift and go to state 24
    LESS_THAN       shift and go to state 25
    GREATER_THAN    shift and go to state 26
    LESS_THAN_OR_EQUAL shift and go to state 27
    GREATER_THAN_OR_EQUAL shift and go to state 28
    AND             shift and go to state 29
    OR              shift and go to state 30


state 5

    (5) statement -> function_definition .

    COMMENT         reduce using rule 5 (statement -> function_definition .)
    IDENTIFIER      reduce using rule 5 (statement -> function_definition .)
    INTEGER         reduce using rule 5 (statement -> function_definition .)
    STRING          reduce using rule 5 (statement -> function_definition .)
    NOT             reduce using rule 5 (statement -> function_definition .)
    LEFT_PAREN      reduce using rule 5 (statement -> function_definition .)
    FUNCTION_KEYWORD reduce using rule 5 (statement -> function_definition .)
    CONTROL_KEYWORD reduce using rule 5 (statement -> function_definition .)
    LEFT_BRACE      reduce using rule 5 (statement -> function_definition .)
    $end            reduce using rule 5 (statement -> function_definition .)
    RIGHT_BRACE     reduce using rule 5 (statement -> function_definition .)


state 6

    (6) statement -> if_statement .

    COMMENT         reduce using rule 6 (statement -> if_statement .)
    IDENTIFIER      reduce using rule 6 (statement -> if_statement .)
    INTEGER         reduce using rule 6 (statement -> if_statement .)
    STRING          reduce using rule 6 (statement -> if_statement .)
    NOT             reduce using rule 6 (statement -> if_statement .)
    LEFT_PAREN      reduce using rule 6 (statement -> if_statement .)
    FUNCTION_KEYWORD reduce using rule 6 (statement -> if_statement .)
    CONTROL_KEYWORD reduce using rule 6 (statement -> if_statement .)
    LEFT_BRACE      reduce using rule 6 (statement -> if_statement .)
    $end            reduce using rule 6 (statement -> if_statement .)
    RIGHT_BRACE     reduce using rule 6 (statement -> if_statement .)


state 7

    (7) statement -> code_block .

    COMMENT         reduce using rule 7 (statement -> code_block .)
    IDENTIFIER      reduce using rule 7 (statement -> code_block .)
    INTEGER         reduce using rule 7 (statement -> code_block .)
    STRING          reduce using rule 7 (statement -> code_block .)
    NOT             reduce using rule 7 (statement -> code_block .)
    LEFT_PAREN      reduce using rule 7 (statement -> code_block .)
    FUNCTION_KEYWORD reduce using rule 7 (statement -> code_block .)
    CONTROL_KEYWORD reduce using rule 7 (statement -> code_block .)
    LEFT_BRACE      reduce using rule 7 (statement -> code_block .)
    $end            reduce using rule 7 (statement -> code_block .)
    RIGHT_BRACE     reduce using rule 7 (statement -> code_block .)


state 8

    (8) statement -> COMMENT .

    COMMENT         reduce using rule 8 (statement -> COMMENT .)
    IDENTIFIER      reduce using rule 8 (statement -> COMMENT .)
    INTEGER         reduce using rule 8 (statement -> COMMENT .)
    STRING          reduce using rule 8 (statement -> COMMENT .)
    NOT             reduce using rule 8 (statement -> COMMENT .)
    LEFT_PAREN      reduce using rule 8 (statement -> COMMENT .)
    FUNCTION_KEYWORD reduce using rule 8 (statement -> COMMENT .)
    CONTROL_KEYWORD reduce using rule 8 (statement -> COMMENT .)
    LEFT_BRACE      reduce using rule 8 (statement -> COMMENT .)
    $end            reduce using rule 8 (statement -> COMMENT .)
    RIGHT_BRACE     reduce using rule 8 (statement -> COMMENT .)


state 9

    (19) expression -> IDENTIFIER .
    (35) expression -> IDENTIFIER . ASSIGN expression

    SEMICOLON       reduce using rule 19 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 19 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 19 (expression -> IDENTIFIER .)
    MULTIPLY        reduce using rule 19 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 19 (expression -> IDENTIFIER .)
    EQUALS          reduce using rule 19 (expression -> IDENTIFIER .)
    NOT_EQUALS      reduce using rule 19 (expression -> IDENTIFIER .)
    LESS_THAN       reduce using rule 19 (expression -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 19 (expression -> IDENTIFIER .)
    LESS_THAN_OR_EQUAL reduce using rule 19 (expression -> IDENTIFIER .)
    GREATER_THAN_OR_EQUAL reduce using rule 19 (expression -> IDENTIFIER .)
    AND             reduce using rule 19 (expression -> IDENTIFIER .)
    OR              reduce using rule 19 (expression -> IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 19 (expression -> IDENTIFIER .)
    LEFT_BRACE      reduce using rule 19 (expression -> IDENTIFIER .)
    ASSIGN          shift and go to state 31


state 10

    (20) expression -> INTEGER .

    SEMICOLON       reduce using rule 20 (expression -> INTEGER .)
    PLUS            reduce using rule 20 (expression -> INTEGER .)
    MINUS           reduce using rule 20 (expression -> INTEGER .)
    MULTIPLY        reduce using rule 20 (expression -> INTEGER .)
    DIVIDE          reduce using rule 20 (expression -> INTEGER .)
    EQUALS          reduce using rule 20 (expression -> INTEGER .)
    NOT_EQUALS      reduce using rule 20 (expression -> INTEGER .)
    LESS_THAN       reduce using rule 20 (expression -> INTEGER .)
    GREATER_THAN    reduce using rule 20 (expression -> INTEGER .)
    LESS_THAN_OR_EQUAL reduce using rule 20 (expression -> INTEGER .)
    GREATER_THAN_OR_EQUAL reduce using rule 20 (expression -> INTEGER .)
    AND             reduce using rule 20 (expression -> INTEGER .)
    OR              reduce using rule 20 (expression -> INTEGER .)
    RIGHT_PAREN     reduce using rule 20 (expression -> INTEGER .)
    LEFT_BRACE      reduce using rule 20 (expression -> INTEGER .)


state 11

    (21) expression -> STRING .

    SEMICOLON       reduce using rule 21 (expression -> STRING .)
    PLUS            reduce using rule 21 (expression -> STRING .)
    MINUS           reduce using rule 21 (expression -> STRING .)
    MULTIPLY        reduce using rule 21 (expression -> STRING .)
    DIVIDE          reduce using rule 21 (expression -> STRING .)
    EQUALS          reduce using rule 21 (expression -> STRING .)
    NOT_EQUALS      reduce using rule 21 (expression -> STRING .)
    LESS_THAN       reduce using rule 21 (expression -> STRING .)
    GREATER_THAN    reduce using rule 21 (expression -> STRING .)
    LESS_THAN_OR_EQUAL reduce using rule 21 (expression -> STRING .)
    GREATER_THAN_OR_EQUAL reduce using rule 21 (expression -> STRING .)
    AND             reduce using rule 21 (expression -> STRING .)
    OR              reduce using rule 21 (expression -> STRING .)
    RIGHT_PAREN     reduce using rule 21 (expression -> STRING .)
    LEFT_BRACE      reduce using rule 21 (expression -> STRING .)


state 12

    (34) expression -> NOT . expression
    (19) expression -> . IDENTIFIER
    (20) expression -> . INTEGER
    (21) expression -> . STRING
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression MULTIPLY expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression EQUALS expression
    (27) expression -> . expression NOT_EQUALS expression
    (28) expression -> . expression LESS_THAN expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression LESS_THAN_OR_EQUAL expression
    (31) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . NOT expression
    (35) expression -> . IDENTIFIER ASSIGN expression
    (36) expression -> . LEFT_PAREN expression RIGHT_PAREN

    IDENTIFIER      shift and go to state 9
    INTEGER         shift and go to state 10
    STRING          shift and go to state 11
    NOT             shift and go to state 12
    LEFT_PAREN      shift and go to state 13

    expression                     shift and go to state 32

state 13

    (36) expression -> LEFT_PAREN . expression RIGHT_PAREN
    (19) expression -> . IDENTIFIER
    (20) expression -> . INTEGER
    (21) expression -> . STRING
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression MULTIPLY expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression EQUALS expression
    (27) expression -> . expression NOT_EQUALS expression
    (28) expression -> . expression LESS_THAN expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression LESS_THAN_OR_EQUAL expression
    (31) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . NOT expression
    (35) expression -> . IDENTIFIER ASSIGN expression
    (36) expression -> . LEFT_PAREN expression RIGHT_PAREN

    IDENTIFIER      shift and go to state 9
    INTEGER         shift and go to state 10
    STRING          shift and go to state 11
    NOT             shift and go to state 12
    LEFT_PAREN      shift and go to state 13

    expression                     shift and go to state 33

state 14

    (9) function_definition -> FUNCTION_KEYWORD . IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN code_block

    IDENTIFIER      shift and go to state 34


state 15

    (13) if_statement -> CONTROL_KEYWORD . expression code_block
    (14) if_statement -> CONTROL_KEYWORD . expression code_block else_statement
    (19) expression -> . IDENTIFIER
    (20) expression -> . INTEGER
    (21) expression -> . STRING
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression MULTIPLY expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression EQUALS expression
    (27) expression -> . expression NOT_EQUALS expression
    (28) expression -> . expression LESS_THAN expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression LESS_THAN_OR_EQUAL expression
    (31) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . NOT expression
    (35) expression -> . IDENTIFIER ASSIGN expression
    (36) expression -> . LEFT_PAREN expression RIGHT_PAREN

    IDENTIFIER      shift and go to state 9
    INTEGER         shift and go to state 10
    STRING          shift and go to state 11
    NOT             shift and go to state 12
    LEFT_PAREN      shift and go to state 13

    expression                     shift and go to state 35

state 16

    (18) code_block -> LEFT_BRACE . statement_list RIGHT_BRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement statement_list
    (4) statement -> . expression SEMICOLON
    (5) statement -> . function_definition
    (6) statement -> . if_statement
    (7) statement -> . code_block
    (8) statement -> . COMMENT
    (19) expression -> . IDENTIFIER
    (20) expression -> . INTEGER
    (21) expression -> . STRING
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression MULTIPLY expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression EQUALS expression
    (27) expression -> . expression NOT_EQUALS expression
    (28) expression -> . expression LESS_THAN expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression LESS_THAN_OR_EQUAL expression
    (31) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . NOT expression
    (35) expression -> . IDENTIFIER ASSIGN expression
    (36) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (9) function_definition -> . FUNCTION_KEYWORD IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN code_block
    (13) if_statement -> . CONTROL_KEYWORD expression code_block
    (14) if_statement -> . CONTROL_KEYWORD expression code_block else_statement
    (18) code_block -> . LEFT_BRACE statement_list RIGHT_BRACE

    COMMENT         shift and go to state 8
    IDENTIFIER      shift and go to state 9
    INTEGER         shift and go to state 10
    STRING          shift and go to state 11
    NOT             shift and go to state 12
    LEFT_PAREN      shift and go to state 13
    FUNCTION_KEYWORD shift and go to state 14
    CONTROL_KEYWORD shift and go to state 15
    LEFT_BRACE      shift and go to state 16

    statement_list                 shift and go to state 36
    statement                      shift and go to state 3
    expression                     shift and go to state 4
    function_definition            shift and go to state 5
    if_statement                   shift and go to state 6
    code_block                     shift and go to state 7

state 17

    (3) statement_list -> statement statement_list .

    $end            reduce using rule 3 (statement_list -> statement statement_list .)
    RIGHT_BRACE     reduce using rule 3 (statement_list -> statement statement_list .)


state 18

    (4) statement -> expression SEMICOLON .

    COMMENT         reduce using rule 4 (statement -> expression SEMICOLON .)
    IDENTIFIER      reduce using rule 4 (statement -> expression SEMICOLON .)
    INTEGER         reduce using rule 4 (statement -> expression SEMICOLON .)
    STRING          reduce using rule 4 (statement -> expression SEMICOLON .)
    NOT             reduce using rule 4 (statement -> expression SEMICOLON .)
    LEFT_PAREN      reduce using rule 4 (statement -> expression SEMICOLON .)
    FUNCTION_KEYWORD reduce using rule 4 (statement -> expression SEMICOLON .)
    CONTROL_KEYWORD reduce using rule 4 (statement -> expression SEMICOLON .)
    LEFT_BRACE      reduce using rule 4 (statement -> expression SEMICOLON .)
    $end            reduce using rule 4 (statement -> expression SEMICOLON .)
    RIGHT_BRACE     reduce using rule 4 (statement -> expression SEMICOLON .)


state 19

    (22) expression -> expression PLUS . expression
    (19) expression -> . IDENTIFIER
    (20) expression -> . INTEGER
    (21) expression -> . STRING
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression MULTIPLY expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression EQUALS expression
    (27) expression -> . expression NOT_EQUALS expression
    (28) expression -> . expression LESS_THAN expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression LESS_THAN_OR_EQUAL expression
    (31) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . NOT expression
    (35) expression -> . IDENTIFIER ASSIGN expression
    (36) expression -> . LEFT_PAREN expression RIGHT_PAREN

    IDENTIFIER      shift and go to state 9
    INTEGER         shift and go to state 10
    STRING          shift and go to state 11
    NOT             shift and go to state 12
    LEFT_PAREN      shift and go to state 13

    expression                     shift and go to state 37

state 20

    (23) expression -> expression MINUS . expression
    (19) expression -> . IDENTIFIER
    (20) expression -> . INTEGER
    (21) expression -> . STRING
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression MULTIPLY expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression EQUALS expression
    (27) expression -> . expression NOT_EQUALS expression
    (28) expression -> . expression LESS_THAN expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression LESS_THAN_OR_EQUAL expression
    (31) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . NOT expression
    (35) expression -> . IDENTIFIER ASSIGN expression
    (36) expression -> . LEFT_PAREN expression RIGHT_PAREN

    IDENTIFIER      shift and go to state 9
    INTEGER         shift and go to state 10
    STRING          shift and go to state 11
    NOT             shift and go to state 12
    LEFT_PAREN      shift and go to state 13

    expression                     shift and go to state 38

state 21

    (24) expression -> expression MULTIPLY . expression
    (19) expression -> . IDENTIFIER
    (20) expression -> . INTEGER
    (21) expression -> . STRING
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression MULTIPLY expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression EQUALS expression
    (27) expression -> . expression NOT_EQUALS expression
    (28) expression -> . expression LESS_THAN expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression LESS_THAN_OR_EQUAL expression
    (31) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . NOT expression
    (35) expression -> . IDENTIFIER ASSIGN expression
    (36) expression -> . LEFT_PAREN expression RIGHT_PAREN

    IDENTIFIER      shift and go to state 9
    INTEGER         shift and go to state 10
    STRING          shift and go to state 11
    NOT             shift and go to state 12
    LEFT_PAREN      shift and go to state 13

    expression                     shift and go to state 39

state 22

    (25) expression -> expression DIVIDE . expression
    (19) expression -> . IDENTIFIER
    (20) expression -> . INTEGER
    (21) expression -> . STRING
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression MULTIPLY expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression EQUALS expression
    (27) expression -> . expression NOT_EQUALS expression
    (28) expression -> . expression LESS_THAN expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression LESS_THAN_OR_EQUAL expression
    (31) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . NOT expression
    (35) expression -> . IDENTIFIER ASSIGN expression
    (36) expression -> . LEFT_PAREN expression RIGHT_PAREN

    IDENTIFIER      shift and go to state 9
    INTEGER         shift and go to state 10
    STRING          shift and go to state 11
    NOT             shift and go to state 12
    LEFT_PAREN      shift and go to state 13

    expression                     shift and go to state 40

state 23

    (26) expression -> expression EQUALS . expression
    (19) expression -> . IDENTIFIER
    (20) expression -> . INTEGER
    (21) expression -> . STRING
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression MULTIPLY expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression EQUALS expression
    (27) expression -> . expression NOT_EQUALS expression
    (28) expression -> . expression LESS_THAN expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression LESS_THAN_OR_EQUAL expression
    (31) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . NOT expression
    (35) expression -> . IDENTIFIER ASSIGN expression
    (36) expression -> . LEFT_PAREN expression RIGHT_PAREN

    IDENTIFIER      shift and go to state 9
    INTEGER         shift and go to state 10
    STRING          shift and go to state 11
    NOT             shift and go to state 12
    LEFT_PAREN      shift and go to state 13

    expression                     shift and go to state 41

state 24

    (27) expression -> expression NOT_EQUALS . expression
    (19) expression -> . IDENTIFIER
    (20) expression -> . INTEGER
    (21) expression -> . STRING
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression MULTIPLY expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression EQUALS expression
    (27) expression -> . expression NOT_EQUALS expression
    (28) expression -> . expression LESS_THAN expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression LESS_THAN_OR_EQUAL expression
    (31) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . NOT expression
    (35) expression -> . IDENTIFIER ASSIGN expression
    (36) expression -> . LEFT_PAREN expression RIGHT_PAREN

    IDENTIFIER      shift and go to state 9
    INTEGER         shift and go to state 10
    STRING          shift and go to state 11
    NOT             shift and go to state 12
    LEFT_PAREN      shift and go to state 13

    expression                     shift and go to state 42

state 25

    (28) expression -> expression LESS_THAN . expression
    (19) expression -> . IDENTIFIER
    (20) expression -> . INTEGER
    (21) expression -> . STRING
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression MULTIPLY expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression EQUALS expression
    (27) expression -> . expression NOT_EQUALS expression
    (28) expression -> . expression LESS_THAN expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression LESS_THAN_OR_EQUAL expression
    (31) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . NOT expression
    (35) expression -> . IDENTIFIER ASSIGN expression
    (36) expression -> . LEFT_PAREN expression RIGHT_PAREN

    IDENTIFIER      shift and go to state 9
    INTEGER         shift and go to state 10
    STRING          shift and go to state 11
    NOT             shift and go to state 12
    LEFT_PAREN      shift and go to state 13

    expression                     shift and go to state 43

state 26

    (29) expression -> expression GREATER_THAN . expression
    (19) expression -> . IDENTIFIER
    (20) expression -> . INTEGER
    (21) expression -> . STRING
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression MULTIPLY expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression EQUALS expression
    (27) expression -> . expression NOT_EQUALS expression
    (28) expression -> . expression LESS_THAN expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression LESS_THAN_OR_EQUAL expression
    (31) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . NOT expression
    (35) expression -> . IDENTIFIER ASSIGN expression
    (36) expression -> . LEFT_PAREN expression RIGHT_PAREN

    IDENTIFIER      shift and go to state 9
    INTEGER         shift and go to state 10
    STRING          shift and go to state 11
    NOT             shift and go to state 12
    LEFT_PAREN      shift and go to state 13

    expression                     shift and go to state 44

state 27

    (30) expression -> expression LESS_THAN_OR_EQUAL . expression
    (19) expression -> . IDENTIFIER
    (20) expression -> . INTEGER
    (21) expression -> . STRING
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression MULTIPLY expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression EQUALS expression
    (27) expression -> . expression NOT_EQUALS expression
    (28) expression -> . expression LESS_THAN expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression LESS_THAN_OR_EQUAL expression
    (31) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . NOT expression
    (35) expression -> . IDENTIFIER ASSIGN expression
    (36) expression -> . LEFT_PAREN expression RIGHT_PAREN

    IDENTIFIER      shift and go to state 9
    INTEGER         shift and go to state 10
    STRING          shift and go to state 11
    NOT             shift and go to state 12
    LEFT_PAREN      shift and go to state 13

    expression                     shift and go to state 45

state 28

    (31) expression -> expression GREATER_THAN_OR_EQUAL . expression
    (19) expression -> . IDENTIFIER
    (20) expression -> . INTEGER
    (21) expression -> . STRING
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression MULTIPLY expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression EQUALS expression
    (27) expression -> . expression NOT_EQUALS expression
    (28) expression -> . expression LESS_THAN expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression LESS_THAN_OR_EQUAL expression
    (31) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . NOT expression
    (35) expression -> . IDENTIFIER ASSIGN expression
    (36) expression -> . LEFT_PAREN expression RIGHT_PAREN

    IDENTIFIER      shift and go to state 9
    INTEGER         shift and go to state 10
    STRING          shift and go to state 11
    NOT             shift and go to state 12
    LEFT_PAREN      shift and go to state 13

    expression                     shift and go to state 46

state 29

    (32) expression -> expression AND . expression
    (19) expression -> . IDENTIFIER
    (20) expression -> . INTEGER
    (21) expression -> . STRING
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression MULTIPLY expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression EQUALS expression
    (27) expression -> . expression NOT_EQUALS expression
    (28) expression -> . expression LESS_THAN expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression LESS_THAN_OR_EQUAL expression
    (31) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . NOT expression
    (35) expression -> . IDENTIFIER ASSIGN expression
    (36) expression -> . LEFT_PAREN expression RIGHT_PAREN

    IDENTIFIER      shift and go to state 9
    INTEGER         shift and go to state 10
    STRING          shift and go to state 11
    NOT             shift and go to state 12
    LEFT_PAREN      shift and go to state 13

    expression                     shift and go to state 47

state 30

    (33) expression -> expression OR . expression
    (19) expression -> . IDENTIFIER
    (20) expression -> . INTEGER
    (21) expression -> . STRING
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression MULTIPLY expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression EQUALS expression
    (27) expression -> . expression NOT_EQUALS expression
    (28) expression -> . expression LESS_THAN expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression LESS_THAN_OR_EQUAL expression
    (31) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . NOT expression
    (35) expression -> . IDENTIFIER ASSIGN expression
    (36) expression -> . LEFT_PAREN expression RIGHT_PAREN

    IDENTIFIER      shift and go to state 9
    INTEGER         shift and go to state 10
    STRING          shift and go to state 11
    NOT             shift and go to state 12
    LEFT_PAREN      shift and go to state 13

    expression                     shift and go to state 48

state 31

    (35) expression -> IDENTIFIER ASSIGN . expression
    (19) expression -> . IDENTIFIER
    (20) expression -> . INTEGER
    (21) expression -> . STRING
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression MULTIPLY expression
    (25) expression -> . expression DIVIDE expression
    (26) expression -> . expression EQUALS expression
    (27) expression -> . expression NOT_EQUALS expression
    (28) expression -> . expression LESS_THAN expression
    (29) expression -> . expression GREATER_THAN expression
    (30) expression -> . expression LESS_THAN_OR_EQUAL expression
    (31) expression -> . expression GREATER_THAN_OR_EQUAL expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression OR expression
    (34) expression -> . NOT expression
    (35) expression -> . IDENTIFIER ASSIGN expression
    (36) expression -> . LEFT_PAREN expression RIGHT_PAREN

    IDENTIFIER      shift and go to state 9
    INTEGER         shift and go to state 10
    STRING          shift and go to state 11
    NOT             shift and go to state 12
    LEFT_PAREN      shift and go to state 13

    expression                     shift and go to state 49

state 32

    (34) expression -> NOT expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . MULTIPLY expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . EQUALS expression
    (27) expression -> expression . NOT_EQUALS expression
    (28) expression -> expression . LESS_THAN expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . LESS_THAN_OR_EQUAL expression
    (31) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 34 (expression -> NOT expression .)
    RIGHT_PAREN     reduce using rule 34 (expression -> NOT expression .)
    LEFT_BRACE      reduce using rule 34 (expression -> NOT expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    MULTIPLY        shift and go to state 21
    DIVIDE          shift and go to state 22
    EQUALS          shift and go to state 23
    NOT_EQUALS      shift and go to state 24
    LESS_THAN       shift and go to state 25
    GREATER_THAN    shift and go to state 26
    LESS_THAN_OR_EQUAL shift and go to state 27
    GREATER_THAN_OR_EQUAL shift and go to state 28
    AND             shift and go to state 29
    OR              shift and go to state 30

  ! PLUS            [ reduce using rule 34 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> NOT expression .) ]
  ! MULTIPLY        [ reduce using rule 34 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> NOT expression .) ]
  ! EQUALS          [ reduce using rule 34 (expression -> NOT expression .) ]
  ! NOT_EQUALS      [ reduce using rule 34 (expression -> NOT expression .) ]
  ! LESS_THAN       [ reduce using rule 34 (expression -> NOT expression .) ]
  ! GREATER_THAN    [ reduce using rule 34 (expression -> NOT expression .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 34 (expression -> NOT expression .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 34 (expression -> NOT expression .) ]
  ! AND             [ reduce using rule 34 (expression -> NOT expression .) ]
  ! OR              [ reduce using rule 34 (expression -> NOT expression .) ]


state 33

    (36) expression -> LEFT_PAREN expression . RIGHT_PAREN
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . MULTIPLY expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . EQUALS expression
    (27) expression -> expression . NOT_EQUALS expression
    (28) expression -> expression . LESS_THAN expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . LESS_THAN_OR_EQUAL expression
    (31) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

    RIGHT_PAREN     shift and go to state 50
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    MULTIPLY        shift and go to state 21
    DIVIDE          shift and go to state 22
    EQUALS          shift and go to state 23
    NOT_EQUALS      shift and go to state 24
    LESS_THAN       shift and go to state 25
    GREATER_THAN    shift and go to state 26
    LESS_THAN_OR_EQUAL shift and go to state 27
    GREATER_THAN_OR_EQUAL shift and go to state 28
    AND             shift and go to state 29
    OR              shift and go to state 30


state 34

    (9) function_definition -> FUNCTION_KEYWORD IDENTIFIER . LEFT_PAREN argument_list RIGHT_PAREN code_block

    LEFT_PAREN      shift and go to state 51


state 35

    (13) if_statement -> CONTROL_KEYWORD expression . code_block
    (14) if_statement -> CONTROL_KEYWORD expression . code_block else_statement
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . MULTIPLY expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . EQUALS expression
    (27) expression -> expression . NOT_EQUALS expression
    (28) expression -> expression . LESS_THAN expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . LESS_THAN_OR_EQUAL expression
    (31) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression
    (18) code_block -> . LEFT_BRACE statement_list RIGHT_BRACE

    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    MULTIPLY        shift and go to state 21
    DIVIDE          shift and go to state 22
    EQUALS          shift and go to state 23
    NOT_EQUALS      shift and go to state 24
    LESS_THAN       shift and go to state 25
    GREATER_THAN    shift and go to state 26
    LESS_THAN_OR_EQUAL shift and go to state 27
    GREATER_THAN_OR_EQUAL shift and go to state 28
    AND             shift and go to state 29
    OR              shift and go to state 30
    LEFT_BRACE      shift and go to state 16

    code_block                     shift and go to state 52

state 36

    (18) code_block -> LEFT_BRACE statement_list . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 53


state 37

    (22) expression -> expression PLUS expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . MULTIPLY expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . EQUALS expression
    (27) expression -> expression . NOT_EQUALS expression
    (28) expression -> expression . LESS_THAN expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . LESS_THAN_OR_EQUAL expression
    (31) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

    SEMICOLON       reduce using rule 22 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 22 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 22 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 22 (expression -> expression PLUS expression .)
    NOT_EQUALS      reduce using rule 22 (expression -> expression PLUS expression .)
    LESS_THAN       reduce using rule 22 (expression -> expression PLUS expression .)
    GREATER_THAN    reduce using rule 22 (expression -> expression PLUS expression .)
    LESS_THAN_OR_EQUAL reduce using rule 22 (expression -> expression PLUS expression .)
    GREATER_THAN_OR_EQUAL reduce using rule 22 (expression -> expression PLUS expression .)
    AND             reduce using rule 22 (expression -> expression PLUS expression .)
    OR              reduce using rule 22 (expression -> expression PLUS expression .)
    RIGHT_PAREN     reduce using rule 22 (expression -> expression PLUS expression .)
    LEFT_BRACE      reduce using rule 22 (expression -> expression PLUS expression .)
    MULTIPLY        shift and go to state 21
    DIVIDE          shift and go to state 22

  ! MULTIPLY        [ reduce using rule 22 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 19 ]
  ! MINUS           [ shift and go to state 20 ]
  ! EQUALS          [ shift and go to state 23 ]
  ! NOT_EQUALS      [ shift and go to state 24 ]
  ! LESS_THAN       [ shift and go to state 25 ]
  ! GREATER_THAN    [ shift and go to state 26 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 27 ]
  ! GREATER_THAN_OR_EQUAL [ shift and go to state 28 ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 30 ]


state 38

    (23) expression -> expression MINUS expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . MULTIPLY expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . EQUALS expression
    (27) expression -> expression . NOT_EQUALS expression
    (28) expression -> expression . LESS_THAN expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . LESS_THAN_OR_EQUAL expression
    (31) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

    SEMICOLON       reduce using rule 23 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 23 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 23 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 23 (expression -> expression MINUS expression .)
    NOT_EQUALS      reduce using rule 23 (expression -> expression MINUS expression .)
    LESS_THAN       reduce using rule 23 (expression -> expression MINUS expression .)
    GREATER_THAN    reduce using rule 23 (expression -> expression MINUS expression .)
    LESS_THAN_OR_EQUAL reduce using rule 23 (expression -> expression MINUS expression .)
    GREATER_THAN_OR_EQUAL reduce using rule 23 (expression -> expression MINUS expression .)
    AND             reduce using rule 23 (expression -> expression MINUS expression .)
    OR              reduce using rule 23 (expression -> expression MINUS expression .)
    RIGHT_PAREN     reduce using rule 23 (expression -> expression MINUS expression .)
    LEFT_BRACE      reduce using rule 23 (expression -> expression MINUS expression .)
    MULTIPLY        shift and go to state 21
    DIVIDE          shift and go to state 22

  ! MULTIPLY        [ reduce using rule 23 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 19 ]
  ! MINUS           [ shift and go to state 20 ]
  ! EQUALS          [ shift and go to state 23 ]
  ! NOT_EQUALS      [ shift and go to state 24 ]
  ! LESS_THAN       [ shift and go to state 25 ]
  ! GREATER_THAN    [ shift and go to state 26 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 27 ]
  ! GREATER_THAN_OR_EQUAL [ shift and go to state 28 ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 30 ]


state 39

    (24) expression -> expression MULTIPLY expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . MULTIPLY expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . EQUALS expression
    (27) expression -> expression . NOT_EQUALS expression
    (28) expression -> expression . LESS_THAN expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . LESS_THAN_OR_EQUAL expression
    (31) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

    SEMICOLON       reduce using rule 24 (expression -> expression MULTIPLY expression .)
    PLUS            reduce using rule 24 (expression -> expression MULTIPLY expression .)
    MINUS           reduce using rule 24 (expression -> expression MULTIPLY expression .)
    MULTIPLY        reduce using rule 24 (expression -> expression MULTIPLY expression .)
    DIVIDE          reduce using rule 24 (expression -> expression MULTIPLY expression .)
    EQUALS          reduce using rule 24 (expression -> expression MULTIPLY expression .)
    NOT_EQUALS      reduce using rule 24 (expression -> expression MULTIPLY expression .)
    LESS_THAN       reduce using rule 24 (expression -> expression MULTIPLY expression .)
    GREATER_THAN    reduce using rule 24 (expression -> expression MULTIPLY expression .)
    LESS_THAN_OR_EQUAL reduce using rule 24 (expression -> expression MULTIPLY expression .)
    GREATER_THAN_OR_EQUAL reduce using rule 24 (expression -> expression MULTIPLY expression .)
    AND             reduce using rule 24 (expression -> expression MULTIPLY expression .)
    OR              reduce using rule 24 (expression -> expression MULTIPLY expression .)
    RIGHT_PAREN     reduce using rule 24 (expression -> expression MULTIPLY expression .)
    LEFT_BRACE      reduce using rule 24 (expression -> expression MULTIPLY expression .)

  ! PLUS            [ shift and go to state 19 ]
  ! MINUS           [ shift and go to state 20 ]
  ! MULTIPLY        [ shift and go to state 21 ]
  ! DIVIDE          [ shift and go to state 22 ]
  ! EQUALS          [ shift and go to state 23 ]
  ! NOT_EQUALS      [ shift and go to state 24 ]
  ! LESS_THAN       [ shift and go to state 25 ]
  ! GREATER_THAN    [ shift and go to state 26 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 27 ]
  ! GREATER_THAN_OR_EQUAL [ shift and go to state 28 ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 30 ]


state 40

    (25) expression -> expression DIVIDE expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . MULTIPLY expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . EQUALS expression
    (27) expression -> expression . NOT_EQUALS expression
    (28) expression -> expression . LESS_THAN expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . LESS_THAN_OR_EQUAL expression
    (31) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

    SEMICOLON       reduce using rule 25 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 25 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 25 (expression -> expression DIVIDE expression .)
    MULTIPLY        reduce using rule 25 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 25 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 25 (expression -> expression DIVIDE expression .)
    NOT_EQUALS      reduce using rule 25 (expression -> expression DIVIDE expression .)
    LESS_THAN       reduce using rule 25 (expression -> expression DIVIDE expression .)
    GREATER_THAN    reduce using rule 25 (expression -> expression DIVIDE expression .)
    LESS_THAN_OR_EQUAL reduce using rule 25 (expression -> expression DIVIDE expression .)
    GREATER_THAN_OR_EQUAL reduce using rule 25 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 25 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 25 (expression -> expression DIVIDE expression .)
    RIGHT_PAREN     reduce using rule 25 (expression -> expression DIVIDE expression .)
    LEFT_BRACE      reduce using rule 25 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 19 ]
  ! MINUS           [ shift and go to state 20 ]
  ! MULTIPLY        [ shift and go to state 21 ]
  ! DIVIDE          [ shift and go to state 22 ]
  ! EQUALS          [ shift and go to state 23 ]
  ! NOT_EQUALS      [ shift and go to state 24 ]
  ! LESS_THAN       [ shift and go to state 25 ]
  ! GREATER_THAN    [ shift and go to state 26 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 27 ]
  ! GREATER_THAN_OR_EQUAL [ shift and go to state 28 ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 30 ]


state 41

    (26) expression -> expression EQUALS expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . MULTIPLY expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . EQUALS expression
    (27) expression -> expression . NOT_EQUALS expression
    (28) expression -> expression . LESS_THAN expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . LESS_THAN_OR_EQUAL expression
    (31) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 26 (expression -> expression EQUALS expression .)
    RIGHT_PAREN     reduce using rule 26 (expression -> expression EQUALS expression .)
    LEFT_BRACE      reduce using rule 26 (expression -> expression EQUALS expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    MULTIPLY        shift and go to state 21
    DIVIDE          shift and go to state 22
    EQUALS          shift and go to state 23
    NOT_EQUALS      shift and go to state 24
    LESS_THAN       shift and go to state 25
    GREATER_THAN    shift and go to state 26
    LESS_THAN_OR_EQUAL shift and go to state 27
    GREATER_THAN_OR_EQUAL shift and go to state 28
    AND             shift and go to state 29
    OR              shift and go to state 30

  ! PLUS            [ reduce using rule 26 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> expression EQUALS expression .) ]
  ! MULTIPLY        [ reduce using rule 26 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ reduce using rule 26 (expression -> expression EQUALS expression .) ]
  ! NOT_EQUALS      [ reduce using rule 26 (expression -> expression EQUALS expression .) ]
  ! LESS_THAN       [ reduce using rule 26 (expression -> expression EQUALS expression .) ]
  ! GREATER_THAN    [ reduce using rule 26 (expression -> expression EQUALS expression .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 26 (expression -> expression EQUALS expression .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 26 (expression -> expression EQUALS expression .) ]
  ! AND             [ reduce using rule 26 (expression -> expression EQUALS expression .) ]
  ! OR              [ reduce using rule 26 (expression -> expression EQUALS expression .) ]


state 42

    (27) expression -> expression NOT_EQUALS expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . MULTIPLY expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . EQUALS expression
    (27) expression -> expression . NOT_EQUALS expression
    (28) expression -> expression . LESS_THAN expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . LESS_THAN_OR_EQUAL expression
    (31) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 27 (expression -> expression NOT_EQUALS expression .)
    RIGHT_PAREN     reduce using rule 27 (expression -> expression NOT_EQUALS expression .)
    LEFT_BRACE      reduce using rule 27 (expression -> expression NOT_EQUALS expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    MULTIPLY        shift and go to state 21
    DIVIDE          shift and go to state 22
    EQUALS          shift and go to state 23
    NOT_EQUALS      shift and go to state 24
    LESS_THAN       shift and go to state 25
    GREATER_THAN    shift and go to state 26
    LESS_THAN_OR_EQUAL shift and go to state 27
    GREATER_THAN_OR_EQUAL shift and go to state 28
    AND             shift and go to state 29
    OR              shift and go to state 30

  ! PLUS            [ reduce using rule 27 (expression -> expression NOT_EQUALS expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression NOT_EQUALS expression .) ]
  ! MULTIPLY        [ reduce using rule 27 (expression -> expression NOT_EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression NOT_EQUALS expression .) ]
  ! EQUALS          [ reduce using rule 27 (expression -> expression NOT_EQUALS expression .) ]
  ! NOT_EQUALS      [ reduce using rule 27 (expression -> expression NOT_EQUALS expression .) ]
  ! LESS_THAN       [ reduce using rule 27 (expression -> expression NOT_EQUALS expression .) ]
  ! GREATER_THAN    [ reduce using rule 27 (expression -> expression NOT_EQUALS expression .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 27 (expression -> expression NOT_EQUALS expression .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 27 (expression -> expression NOT_EQUALS expression .) ]
  ! AND             [ reduce using rule 27 (expression -> expression NOT_EQUALS expression .) ]
  ! OR              [ reduce using rule 27 (expression -> expression NOT_EQUALS expression .) ]


state 43

    (28) expression -> expression LESS_THAN expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . MULTIPLY expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . EQUALS expression
    (27) expression -> expression . NOT_EQUALS expression
    (28) expression -> expression . LESS_THAN expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . LESS_THAN_OR_EQUAL expression
    (31) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 28 (expression -> expression LESS_THAN expression .)
    RIGHT_PAREN     reduce using rule 28 (expression -> expression LESS_THAN expression .)
    LEFT_BRACE      reduce using rule 28 (expression -> expression LESS_THAN expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    MULTIPLY        shift and go to state 21
    DIVIDE          shift and go to state 22
    EQUALS          shift and go to state 23
    NOT_EQUALS      shift and go to state 24
    LESS_THAN       shift and go to state 25
    GREATER_THAN    shift and go to state 26
    LESS_THAN_OR_EQUAL shift and go to state 27
    GREATER_THAN_OR_EQUAL shift and go to state 28
    AND             shift and go to state 29
    OR              shift and go to state 30

  ! PLUS            [ reduce using rule 28 (expression -> expression LESS_THAN expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression LESS_THAN expression .) ]
  ! MULTIPLY        [ reduce using rule 28 (expression -> expression LESS_THAN expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression LESS_THAN expression .) ]
  ! EQUALS          [ reduce using rule 28 (expression -> expression LESS_THAN expression .) ]
  ! NOT_EQUALS      [ reduce using rule 28 (expression -> expression LESS_THAN expression .) ]
  ! LESS_THAN       [ reduce using rule 28 (expression -> expression LESS_THAN expression .) ]
  ! GREATER_THAN    [ reduce using rule 28 (expression -> expression LESS_THAN expression .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 28 (expression -> expression LESS_THAN expression .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 28 (expression -> expression LESS_THAN expression .) ]
  ! AND             [ reduce using rule 28 (expression -> expression LESS_THAN expression .) ]
  ! OR              [ reduce using rule 28 (expression -> expression LESS_THAN expression .) ]


state 44

    (29) expression -> expression GREATER_THAN expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . MULTIPLY expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . EQUALS expression
    (27) expression -> expression . NOT_EQUALS expression
    (28) expression -> expression . LESS_THAN expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . LESS_THAN_OR_EQUAL expression
    (31) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 29 (expression -> expression GREATER_THAN expression .)
    RIGHT_PAREN     reduce using rule 29 (expression -> expression GREATER_THAN expression .)
    LEFT_BRACE      reduce using rule 29 (expression -> expression GREATER_THAN expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    MULTIPLY        shift and go to state 21
    DIVIDE          shift and go to state 22
    EQUALS          shift and go to state 23
    NOT_EQUALS      shift and go to state 24
    LESS_THAN       shift and go to state 25
    GREATER_THAN    shift and go to state 26
    LESS_THAN_OR_EQUAL shift and go to state 27
    GREATER_THAN_OR_EQUAL shift and go to state 28
    AND             shift and go to state 29
    OR              shift and go to state 30

  ! PLUS            [ reduce using rule 29 (expression -> expression GREATER_THAN expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression GREATER_THAN expression .) ]
  ! MULTIPLY        [ reduce using rule 29 (expression -> expression GREATER_THAN expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression GREATER_THAN expression .) ]
  ! EQUALS          [ reduce using rule 29 (expression -> expression GREATER_THAN expression .) ]
  ! NOT_EQUALS      [ reduce using rule 29 (expression -> expression GREATER_THAN expression .) ]
  ! LESS_THAN       [ reduce using rule 29 (expression -> expression GREATER_THAN expression .) ]
  ! GREATER_THAN    [ reduce using rule 29 (expression -> expression GREATER_THAN expression .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 29 (expression -> expression GREATER_THAN expression .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 29 (expression -> expression GREATER_THAN expression .) ]
  ! AND             [ reduce using rule 29 (expression -> expression GREATER_THAN expression .) ]
  ! OR              [ reduce using rule 29 (expression -> expression GREATER_THAN expression .) ]


state 45

    (30) expression -> expression LESS_THAN_OR_EQUAL expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . MULTIPLY expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . EQUALS expression
    (27) expression -> expression . NOT_EQUALS expression
    (28) expression -> expression . LESS_THAN expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . LESS_THAN_OR_EQUAL expression
    (31) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 30 (expression -> expression LESS_THAN_OR_EQUAL expression .)
    RIGHT_PAREN     reduce using rule 30 (expression -> expression LESS_THAN_OR_EQUAL expression .)
    LEFT_BRACE      reduce using rule 30 (expression -> expression LESS_THAN_OR_EQUAL expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    MULTIPLY        shift and go to state 21
    DIVIDE          shift and go to state 22
    EQUALS          shift and go to state 23
    NOT_EQUALS      shift and go to state 24
    LESS_THAN       shift and go to state 25
    GREATER_THAN    shift and go to state 26
    LESS_THAN_OR_EQUAL shift and go to state 27
    GREATER_THAN_OR_EQUAL shift and go to state 28
    AND             shift and go to state 29
    OR              shift and go to state 30

  ! PLUS            [ reduce using rule 30 (expression -> expression LESS_THAN_OR_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression LESS_THAN_OR_EQUAL expression .) ]
  ! MULTIPLY        [ reduce using rule 30 (expression -> expression LESS_THAN_OR_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression LESS_THAN_OR_EQUAL expression .) ]
  ! EQUALS          [ reduce using rule 30 (expression -> expression LESS_THAN_OR_EQUAL expression .) ]
  ! NOT_EQUALS      [ reduce using rule 30 (expression -> expression LESS_THAN_OR_EQUAL expression .) ]
  ! LESS_THAN       [ reduce using rule 30 (expression -> expression LESS_THAN_OR_EQUAL expression .) ]
  ! GREATER_THAN    [ reduce using rule 30 (expression -> expression LESS_THAN_OR_EQUAL expression .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 30 (expression -> expression LESS_THAN_OR_EQUAL expression .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 30 (expression -> expression LESS_THAN_OR_EQUAL expression .) ]
  ! AND             [ reduce using rule 30 (expression -> expression LESS_THAN_OR_EQUAL expression .) ]
  ! OR              [ reduce using rule 30 (expression -> expression LESS_THAN_OR_EQUAL expression .) ]


state 46

    (31) expression -> expression GREATER_THAN_OR_EQUAL expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . MULTIPLY expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . EQUALS expression
    (27) expression -> expression . NOT_EQUALS expression
    (28) expression -> expression . LESS_THAN expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . LESS_THAN_OR_EQUAL expression
    (31) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 31 (expression -> expression GREATER_THAN_OR_EQUAL expression .)
    RIGHT_PAREN     reduce using rule 31 (expression -> expression GREATER_THAN_OR_EQUAL expression .)
    LEFT_BRACE      reduce using rule 31 (expression -> expression GREATER_THAN_OR_EQUAL expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    MULTIPLY        shift and go to state 21
    DIVIDE          shift and go to state 22
    EQUALS          shift and go to state 23
    NOT_EQUALS      shift and go to state 24
    LESS_THAN       shift and go to state 25
    GREATER_THAN    shift and go to state 26
    LESS_THAN_OR_EQUAL shift and go to state 27
    GREATER_THAN_OR_EQUAL shift and go to state 28
    AND             shift and go to state 29
    OR              shift and go to state 30

  ! PLUS            [ reduce using rule 31 (expression -> expression GREATER_THAN_OR_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression GREATER_THAN_OR_EQUAL expression .) ]
  ! MULTIPLY        [ reduce using rule 31 (expression -> expression GREATER_THAN_OR_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression GREATER_THAN_OR_EQUAL expression .) ]
  ! EQUALS          [ reduce using rule 31 (expression -> expression GREATER_THAN_OR_EQUAL expression .) ]
  ! NOT_EQUALS      [ reduce using rule 31 (expression -> expression GREATER_THAN_OR_EQUAL expression .) ]
  ! LESS_THAN       [ reduce using rule 31 (expression -> expression GREATER_THAN_OR_EQUAL expression .) ]
  ! GREATER_THAN    [ reduce using rule 31 (expression -> expression GREATER_THAN_OR_EQUAL expression .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 31 (expression -> expression GREATER_THAN_OR_EQUAL expression .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 31 (expression -> expression GREATER_THAN_OR_EQUAL expression .) ]
  ! AND             [ reduce using rule 31 (expression -> expression GREATER_THAN_OR_EQUAL expression .) ]
  ! OR              [ reduce using rule 31 (expression -> expression GREATER_THAN_OR_EQUAL expression .) ]


state 47

    (32) expression -> expression AND expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . MULTIPLY expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . EQUALS expression
    (27) expression -> expression . NOT_EQUALS expression
    (28) expression -> expression . LESS_THAN expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . LESS_THAN_OR_EQUAL expression
    (31) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 32 (expression -> expression AND expression .)
    RIGHT_PAREN     reduce using rule 32 (expression -> expression AND expression .)
    LEFT_BRACE      reduce using rule 32 (expression -> expression AND expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    MULTIPLY        shift and go to state 21
    DIVIDE          shift and go to state 22
    EQUALS          shift and go to state 23
    NOT_EQUALS      shift and go to state 24
    LESS_THAN       shift and go to state 25
    GREATER_THAN    shift and go to state 26
    LESS_THAN_OR_EQUAL shift and go to state 27
    GREATER_THAN_OR_EQUAL shift and go to state 28
    AND             shift and go to state 29
    OR              shift and go to state 30

  ! PLUS            [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! MULTIPLY        [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! EQUALS          [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! NOT_EQUALS      [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! LESS_THAN       [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! GREATER_THAN    [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 32 (expression -> expression AND expression .) ]


state 48

    (33) expression -> expression OR expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . MULTIPLY expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . EQUALS expression
    (27) expression -> expression . NOT_EQUALS expression
    (28) expression -> expression . LESS_THAN expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . LESS_THAN_OR_EQUAL expression
    (31) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 33 (expression -> expression OR expression .)
    RIGHT_PAREN     reduce using rule 33 (expression -> expression OR expression .)
    LEFT_BRACE      reduce using rule 33 (expression -> expression OR expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    MULTIPLY        shift and go to state 21
    DIVIDE          shift and go to state 22
    EQUALS          shift and go to state 23
    NOT_EQUALS      shift and go to state 24
    LESS_THAN       shift and go to state 25
    GREATER_THAN    shift and go to state 26
    LESS_THAN_OR_EQUAL shift and go to state 27
    GREATER_THAN_OR_EQUAL shift and go to state 28
    AND             shift and go to state 29
    OR              shift and go to state 30

  ! PLUS            [ reduce using rule 33 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression OR expression .) ]
  ! MULTIPLY        [ reduce using rule 33 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression OR expression .) ]
  ! EQUALS          [ reduce using rule 33 (expression -> expression OR expression .) ]
  ! NOT_EQUALS      [ reduce using rule 33 (expression -> expression OR expression .) ]
  ! LESS_THAN       [ reduce using rule 33 (expression -> expression OR expression .) ]
  ! GREATER_THAN    [ reduce using rule 33 (expression -> expression OR expression .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 33 (expression -> expression OR expression .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 33 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 33 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 33 (expression -> expression OR expression .) ]


state 49

    (35) expression -> IDENTIFIER ASSIGN expression .
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . MULTIPLY expression
    (25) expression -> expression . DIVIDE expression
    (26) expression -> expression . EQUALS expression
    (27) expression -> expression . NOT_EQUALS expression
    (28) expression -> expression . LESS_THAN expression
    (29) expression -> expression . GREATER_THAN expression
    (30) expression -> expression . LESS_THAN_OR_EQUAL expression
    (31) expression -> expression . GREATER_THAN_OR_EQUAL expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 35 (expression -> IDENTIFIER ASSIGN expression .)
    RIGHT_PAREN     reduce using rule 35 (expression -> IDENTIFIER ASSIGN expression .)
    LEFT_BRACE      reduce using rule 35 (expression -> IDENTIFIER ASSIGN expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    MULTIPLY        shift and go to state 21
    DIVIDE          shift and go to state 22
    EQUALS          shift and go to state 23
    NOT_EQUALS      shift and go to state 24
    LESS_THAN       shift and go to state 25
    GREATER_THAN    shift and go to state 26
    LESS_THAN_OR_EQUAL shift and go to state 27
    GREATER_THAN_OR_EQUAL shift and go to state 28
    AND             shift and go to state 29
    OR              shift and go to state 30

  ! PLUS            [ reduce using rule 35 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! MULTIPLY        [ reduce using rule 35 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! EQUALS          [ reduce using rule 35 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! NOT_EQUALS      [ reduce using rule 35 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! LESS_THAN       [ reduce using rule 35 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! GREATER_THAN    [ reduce using rule 35 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 35 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 35 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! AND             [ reduce using rule 35 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! OR              [ reduce using rule 35 (expression -> IDENTIFIER ASSIGN expression .) ]


state 50

    (36) expression -> LEFT_PAREN expression RIGHT_PAREN .

    SEMICOLON       reduce using rule 36 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    PLUS            reduce using rule 36 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    MINUS           reduce using rule 36 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    MULTIPLY        reduce using rule 36 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    DIVIDE          reduce using rule 36 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    EQUALS          reduce using rule 36 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    NOT_EQUALS      reduce using rule 36 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    LESS_THAN       reduce using rule 36 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    GREATER_THAN    reduce using rule 36 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    LESS_THAN_OR_EQUAL reduce using rule 36 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    GREATER_THAN_OR_EQUAL reduce using rule 36 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    AND             reduce using rule 36 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    OR              reduce using rule 36 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 36 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    LEFT_BRACE      reduce using rule 36 (expression -> LEFT_PAREN expression RIGHT_PAREN .)


state 51

    (9) function_definition -> FUNCTION_KEYWORD IDENTIFIER LEFT_PAREN . argument_list RIGHT_PAREN code_block
    (10) argument_list -> . IDENTIFIER
    (11) argument_list -> . IDENTIFIER COMMA argument_list
    (12) argument_list -> . empty
    (17) empty -> .

    IDENTIFIER      shift and go to state 54
    RIGHT_PAREN     reduce using rule 17 (empty -> .)

    argument_list                  shift and go to state 55
    empty                          shift and go to state 56

state 52

    (13) if_statement -> CONTROL_KEYWORD expression code_block .
    (14) if_statement -> CONTROL_KEYWORD expression code_block . else_statement
    (15) else_statement -> . CONTROL_KEYWORD code_block
    (16) else_statement -> . empty
    (17) empty -> .

  ! shift/reduce conflict for CONTROL_KEYWORD resolved as shift
  ! reduce/reduce conflict for COMMENT resolved using rule 13 (if_statement -> CONTROL_KEYWORD expression code_block .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 13 (if_statement -> CONTROL_KEYWORD expression code_block .)
  ! reduce/reduce conflict for INTEGER resolved using rule 13 (if_statement -> CONTROL_KEYWORD expression code_block .)
  ! reduce/reduce conflict for STRING resolved using rule 13 (if_statement -> CONTROL_KEYWORD expression code_block .)
  ! reduce/reduce conflict for NOT resolved using rule 13 (if_statement -> CONTROL_KEYWORD expression code_block .)
  ! reduce/reduce conflict for LEFT_PAREN resolved using rule 13 (if_statement -> CONTROL_KEYWORD expression code_block .)
  ! reduce/reduce conflict for FUNCTION_KEYWORD resolved using rule 13 (if_statement -> CONTROL_KEYWORD expression code_block .)
  ! shift/reduce conflict for CONTROL_KEYWORD resolved as shift
  ! reduce/reduce conflict for LEFT_BRACE resolved using rule 13 (if_statement -> CONTROL_KEYWORD expression code_block .)
  ! reduce/reduce conflict for $end resolved using rule 13 (if_statement -> CONTROL_KEYWORD expression code_block .)
  ! reduce/reduce conflict for RIGHT_BRACE resolved using rule 13 (if_statement -> CONTROL_KEYWORD expression code_block .)
    COMMENT         reduce using rule 13 (if_statement -> CONTROL_KEYWORD expression code_block .)
    IDENTIFIER      reduce using rule 13 (if_statement -> CONTROL_KEYWORD expression code_block .)
    INTEGER         reduce using rule 13 (if_statement -> CONTROL_KEYWORD expression code_block .)
    STRING          reduce using rule 13 (if_statement -> CONTROL_KEYWORD expression code_block .)
    NOT             reduce using rule 13 (if_statement -> CONTROL_KEYWORD expression code_block .)
    LEFT_PAREN      reduce using rule 13 (if_statement -> CONTROL_KEYWORD expression code_block .)
    FUNCTION_KEYWORD reduce using rule 13 (if_statement -> CONTROL_KEYWORD expression code_block .)
    LEFT_BRACE      reduce using rule 13 (if_statement -> CONTROL_KEYWORD expression code_block .)
    $end            reduce using rule 13 (if_statement -> CONTROL_KEYWORD expression code_block .)
    RIGHT_BRACE     reduce using rule 13 (if_statement -> CONTROL_KEYWORD expression code_block .)
    CONTROL_KEYWORD shift and go to state 57

  ! CONTROL_KEYWORD [ reduce using rule 13 (if_statement -> CONTROL_KEYWORD expression code_block .) ]
  ! COMMENT         [ reduce using rule 17 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 17 (empty -> .) ]
  ! INTEGER         [ reduce using rule 17 (empty -> .) ]
  ! STRING          [ reduce using rule 17 (empty -> .) ]
  ! NOT             [ reduce using rule 17 (empty -> .) ]
  ! LEFT_PAREN      [ reduce using rule 17 (empty -> .) ]
  ! FUNCTION_KEYWORD [ reduce using rule 17 (empty -> .) ]
  ! CONTROL_KEYWORD [ reduce using rule 17 (empty -> .) ]
  ! LEFT_BRACE      [ reduce using rule 17 (empty -> .) ]
  ! $end            [ reduce using rule 17 (empty -> .) ]
  ! RIGHT_BRACE     [ reduce using rule 17 (empty -> .) ]

    else_statement                 shift and go to state 58
    empty                          shift and go to state 59

state 53

    (18) code_block -> LEFT_BRACE statement_list RIGHT_BRACE .

    COMMENT         reduce using rule 18 (code_block -> LEFT_BRACE statement_list RIGHT_BRACE .)
    IDENTIFIER      reduce using rule 18 (code_block -> LEFT_BRACE statement_list RIGHT_BRACE .)
    INTEGER         reduce using rule 18 (code_block -> LEFT_BRACE statement_list RIGHT_BRACE .)
    STRING          reduce using rule 18 (code_block -> LEFT_BRACE statement_list RIGHT_BRACE .)
    NOT             reduce using rule 18 (code_block -> LEFT_BRACE statement_list RIGHT_BRACE .)
    LEFT_PAREN      reduce using rule 18 (code_block -> LEFT_BRACE statement_list RIGHT_BRACE .)
    FUNCTION_KEYWORD reduce using rule 18 (code_block -> LEFT_BRACE statement_list RIGHT_BRACE .)
    CONTROL_KEYWORD reduce using rule 18 (code_block -> LEFT_BRACE statement_list RIGHT_BRACE .)
    LEFT_BRACE      reduce using rule 18 (code_block -> LEFT_BRACE statement_list RIGHT_BRACE .)
    $end            reduce using rule 18 (code_block -> LEFT_BRACE statement_list RIGHT_BRACE .)
    RIGHT_BRACE     reduce using rule 18 (code_block -> LEFT_BRACE statement_list RIGHT_BRACE .)


state 54

    (10) argument_list -> IDENTIFIER .
    (11) argument_list -> IDENTIFIER . COMMA argument_list

    RIGHT_PAREN     reduce using rule 10 (argument_list -> IDENTIFIER .)
    COMMA           shift and go to state 60


state 55

    (9) function_definition -> FUNCTION_KEYWORD IDENTIFIER LEFT_PAREN argument_list . RIGHT_PAREN code_block

    RIGHT_PAREN     shift and go to state 61


state 56

    (12) argument_list -> empty .

    RIGHT_PAREN     reduce using rule 12 (argument_list -> empty .)


state 57

    (15) else_statement -> CONTROL_KEYWORD . code_block
    (18) code_block -> . LEFT_BRACE statement_list RIGHT_BRACE

    LEFT_BRACE      shift and go to state 16

    code_block                     shift and go to state 62

state 58

    (14) if_statement -> CONTROL_KEYWORD expression code_block else_statement .

    COMMENT         reduce using rule 14 (if_statement -> CONTROL_KEYWORD expression code_block else_statement .)
    IDENTIFIER      reduce using rule 14 (if_statement -> CONTROL_KEYWORD expression code_block else_statement .)
    INTEGER         reduce using rule 14 (if_statement -> CONTROL_KEYWORD expression code_block else_statement .)
    STRING          reduce using rule 14 (if_statement -> CONTROL_KEYWORD expression code_block else_statement .)
    NOT             reduce using rule 14 (if_statement -> CONTROL_KEYWORD expression code_block else_statement .)
    LEFT_PAREN      reduce using rule 14 (if_statement -> CONTROL_KEYWORD expression code_block else_statement .)
    FUNCTION_KEYWORD reduce using rule 14 (if_statement -> CONTROL_KEYWORD expression code_block else_statement .)
    CONTROL_KEYWORD reduce using rule 14 (if_statement -> CONTROL_KEYWORD expression code_block else_statement .)
    LEFT_BRACE      reduce using rule 14 (if_statement -> CONTROL_KEYWORD expression code_block else_statement .)
    $end            reduce using rule 14 (if_statement -> CONTROL_KEYWORD expression code_block else_statement .)
    RIGHT_BRACE     reduce using rule 14 (if_statement -> CONTROL_KEYWORD expression code_block else_statement .)


state 59

    (16) else_statement -> empty .

    COMMENT         reduce using rule 16 (else_statement -> empty .)
    IDENTIFIER      reduce using rule 16 (else_statement -> empty .)
    INTEGER         reduce using rule 16 (else_statement -> empty .)
    STRING          reduce using rule 16 (else_statement -> empty .)
    NOT             reduce using rule 16 (else_statement -> empty .)
    LEFT_PAREN      reduce using rule 16 (else_statement -> empty .)
    FUNCTION_KEYWORD reduce using rule 16 (else_statement -> empty .)
    CONTROL_KEYWORD reduce using rule 16 (else_statement -> empty .)
    LEFT_BRACE      reduce using rule 16 (else_statement -> empty .)
    $end            reduce using rule 16 (else_statement -> empty .)
    RIGHT_BRACE     reduce using rule 16 (else_statement -> empty .)


state 60

    (11) argument_list -> IDENTIFIER COMMA . argument_list
    (10) argument_list -> . IDENTIFIER
    (11) argument_list -> . IDENTIFIER COMMA argument_list
    (12) argument_list -> . empty
    (17) empty -> .

    IDENTIFIER      shift and go to state 54
    RIGHT_PAREN     reduce using rule 17 (empty -> .)

    argument_list                  shift and go to state 63
    empty                          shift and go to state 56

state 61

    (9) function_definition -> FUNCTION_KEYWORD IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN . code_block
    (18) code_block -> . LEFT_BRACE statement_list RIGHT_BRACE

    LEFT_BRACE      shift and go to state 16

    code_block                     shift and go to state 64

state 62

    (15) else_statement -> CONTROL_KEYWORD code_block .

    COMMENT         reduce using rule 15 (else_statement -> CONTROL_KEYWORD code_block .)
    IDENTIFIER      reduce using rule 15 (else_statement -> CONTROL_KEYWORD code_block .)
    INTEGER         reduce using rule 15 (else_statement -> CONTROL_KEYWORD code_block .)
    STRING          reduce using rule 15 (else_statement -> CONTROL_KEYWORD code_block .)
    NOT             reduce using rule 15 (else_statement -> CONTROL_KEYWORD code_block .)
    LEFT_PAREN      reduce using rule 15 (else_statement -> CONTROL_KEYWORD code_block .)
    FUNCTION_KEYWORD reduce using rule 15 (else_statement -> CONTROL_KEYWORD code_block .)
    CONTROL_KEYWORD reduce using rule 15 (else_statement -> CONTROL_KEYWORD code_block .)
    LEFT_BRACE      reduce using rule 15 (else_statement -> CONTROL_KEYWORD code_block .)
    $end            reduce using rule 15 (else_statement -> CONTROL_KEYWORD code_block .)
    RIGHT_BRACE     reduce using rule 15 (else_statement -> CONTROL_KEYWORD code_block .)


state 63

    (11) argument_list -> IDENTIFIER COMMA argument_list .

    RIGHT_PAREN     reduce using rule 11 (argument_list -> IDENTIFIER COMMA argument_list .)


state 64

    (9) function_definition -> FUNCTION_KEYWORD IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN code_block .

    COMMENT         reduce using rule 9 (function_definition -> FUNCTION_KEYWORD IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN code_block .)
    IDENTIFIER      reduce using rule 9 (function_definition -> FUNCTION_KEYWORD IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN code_block .)
    INTEGER         reduce using rule 9 (function_definition -> FUNCTION_KEYWORD IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN code_block .)
    STRING          reduce using rule 9 (function_definition -> FUNCTION_KEYWORD IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN code_block .)
    NOT             reduce using rule 9 (function_definition -> FUNCTION_KEYWORD IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN code_block .)
    LEFT_PAREN      reduce using rule 9 (function_definition -> FUNCTION_KEYWORD IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN code_block .)
    FUNCTION_KEYWORD reduce using rule 9 (function_definition -> FUNCTION_KEYWORD IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN code_block .)
    CONTROL_KEYWORD reduce using rule 9 (function_definition -> FUNCTION_KEYWORD IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN code_block .)
    LEFT_BRACE      reduce using rule 9 (function_definition -> FUNCTION_KEYWORD IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN code_block .)
    $end            reduce using rule 9 (function_definition -> FUNCTION_KEYWORD IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN code_block .)
    RIGHT_BRACE     reduce using rule 9 (function_definition -> FUNCTION_KEYWORD IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN code_block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 32 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 32 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 32 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 32 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 32 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 32 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 32 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 32 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_OR_EQUAL in state 32 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 32 resolved as shift
WARNING: shift/reduce conflict for AND in state 32 resolved as shift
WARNING: shift/reduce conflict for OR in state 32 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 41 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 41 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 41 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 41 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 41 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 41 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 41 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 41 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_OR_EQUAL in state 41 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 41 resolved as shift
WARNING: shift/reduce conflict for AND in state 41 resolved as shift
WARNING: shift/reduce conflict for OR in state 41 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 42 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 42 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 42 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 42 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 42 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 42 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 42 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 42 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_OR_EQUAL in state 42 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 42 resolved as shift
WARNING: shift/reduce conflict for AND in state 42 resolved as shift
WARNING: shift/reduce conflict for OR in state 42 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 43 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 43 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 43 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 43 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 43 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 43 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 43 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 43 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_OR_EQUAL in state 43 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 43 resolved as shift
WARNING: shift/reduce conflict for AND in state 43 resolved as shift
WARNING: shift/reduce conflict for OR in state 43 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 44 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 44 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 44 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 44 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 44 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 44 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 44 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 44 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_OR_EQUAL in state 44 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 44 resolved as shift
WARNING: shift/reduce conflict for AND in state 44 resolved as shift
WARNING: shift/reduce conflict for OR in state 44 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 45 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 45 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 45 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 45 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 45 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 45 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 45 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 45 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_OR_EQUAL in state 45 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 45 resolved as shift
WARNING: shift/reduce conflict for AND in state 45 resolved as shift
WARNING: shift/reduce conflict for OR in state 45 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 46 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 46 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 46 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 46 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 46 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 46 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 46 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 46 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_OR_EQUAL in state 46 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 46 resolved as shift
WARNING: shift/reduce conflict for AND in state 46 resolved as shift
WARNING: shift/reduce conflict for OR in state 46 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 47 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 47 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 47 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 47 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 47 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 47 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 47 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 47 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_OR_EQUAL in state 47 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 47 resolved as shift
WARNING: shift/reduce conflict for AND in state 47 resolved as shift
WARNING: shift/reduce conflict for OR in state 47 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 48 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 48 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 48 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 48 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 48 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 48 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 48 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 48 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_OR_EQUAL in state 48 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 48 resolved as shift
WARNING: shift/reduce conflict for AND in state 48 resolved as shift
WARNING: shift/reduce conflict for OR in state 48 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 49 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 49 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 49 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 49 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 49 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 49 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 49 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 49 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_OR_EQUAL in state 49 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 49 resolved as shift
WARNING: shift/reduce conflict for AND in state 49 resolved as shift
WARNING: shift/reduce conflict for OR in state 49 resolved as shift
WARNING: shift/reduce conflict for CONTROL_KEYWORD in state 52 resolved as shift
WARNING: shift/reduce conflict for CONTROL_KEYWORD in state 52 resolved as shift
WARNING: reduce/reduce conflict in state 52 resolved using rule (if_statement -> CONTROL_KEYWORD expression code_block)
WARNING: rejected rule (empty -> <empty>) in state 52
